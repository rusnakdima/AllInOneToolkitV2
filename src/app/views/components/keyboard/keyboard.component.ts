/* sys lib */
import { CommonModule } from "@angular/common";
import { Component, EventEmitter, Output } from "@angular/core";

interface KeyConfig {
  key: string;
  label?: string;
  size?: "small" | "medium" | "large";
}

interface KeyboardEvent {
  key: string;
  code: string;
  keyCode: number;
}

@Component({
  selector: "app-keyboard",
  standalone: true,
  imports: [CommonModule],
  templateUrl: "./keyboard.component.html",
})
export class KeyboardComponent {
  @Output() keyPress = new EventEmitter<KeyboardEvent>();

  currentLayout = "main";

  mainLayout: KeyConfig[][] = [
    [
      { key: "q" },
      { key: "w" },
      { key: "e" },
      { key: "r" },
      { key: "t" },
      { key: "y" },
      { key: "u" },
      { key: "i" },
      { key: "o" },
      { key: "p" },
      { key: "Backspace", label: "⌫", size: "medium" },
    ],
    [
      { key: "a" },
      { key: "s" },
      { key: "d" },
      { key: "f" },
      { key: "g" },
      { key: "h" },
      { key: "j" },
      { key: "k" },
      { key: "l" },
      { key: "Enter", label: "↵", size: "medium" },
    ],
    [
      { key: "Shift", label: "⇧", size: "medium" },
      { key: "z" },
      { key: "x" },
      { key: "c" },
      { key: "v" },
      { key: "b" },
      { key: "n" },
      { key: "m" },
      { key: "," },
      { key: "." },
    ],
    [
      { key: "Ctrl", label: "⌃", size: "medium" },
      { key: "Alt", label: "⎇", size: "medium" },
      { key: "Space", label: " ", size: "large" },
      { key: "Tab", label: "↹", size: "medium" },
      { key: "Esc", size: "medium" },
    ],
  ];

  functionLayout: KeyConfig[][] = [
    [
      { key: "F1" },
      { key: "F2" },
      { key: "F3" },
      { key: "F4" },
      { key: "F5" },
      { key: "F6" },
      { key: "F7" },
      { key: "F8" },
    ],
    [
      { key: "F9" },
      { key: "F10" },
      { key: "F11" },
      { key: "F12" },
      { key: "PrtSc" },
      { key: "ScrLk" },
      { key: "Pause" },
      { key: "Insert" },
    ],
    [
      { key: "Delete" },
      { key: "Home" },
      { key: "End" },
      { key: "PgUp" },
      { key: "PgDn" },
      { key: "NumLk" },
      { key: "⌘", label: "Win" },
      { key: "Menu" },
    ],
    [{ key: "main", label: "Back to Main", size: "large" }],
  ];

  numbersLayout: KeyConfig[][] = [
    [
      { key: "1" },
      { key: "2" },
      { key: "3" },
      { key: "4" },
      { key: "5" },
      { key: "6" },
      { key: "7" },
      { key: "8" },
      { key: "9" },
      { key: "0" },
    ],
    [
      { key: "`" },
      { key: "~" },
      { key: "!" },
      { key: "@" },
      { key: "#" },
      { key: "$" },
      { key: "%" },
      { key: "^" },
      { key: "&" },
      { key: "*" },
    ],
    [
      { key: "(" },
      { key: ")" },
      { key: "-" },
      { key: "_" },
      { key: "=" },
      { key: "+" },
      { key: "[" },
      { key: "]" },
      { key: "{" },
      { key: "}" },
    ],
    [{ key: "main", label: "Back to Main", size: "large" }],
  ];

  symbolsLayout: KeyConfig[][] = [
    [
      { key: "\\" },
      { key: "|" },
      { key: ";" },
      { key: ":" },
      { key: "'" },
      { key: '"' },
      { key: "/" },
      { key: "?" },
      { key: "." },
      { key: "," },
    ],
    [
      { key: "<" },
      { key: ">" },
      { key: "≤" },
      { key: "≥" },
      { key: "≠" },
      { key: "≈" },
      { key: "÷" },
      { key: "×" },
      { key: "±" },
      { key: "∞" },
    ],
    [
      { key: "€" },
      { key: "£" },
      { key: "¥" },
      { key: "₹" },
      { key: "©" },
      { key: "®" },
      { key: "™" },
      { key: "°" },
      { key: "¶" },
      { key: "§" },
    ],
    [{ key: "main", label: "Back to Main", size: "large" }],
  ];

  navLayout: KeyConfig[][] = [
    [
      { key: "Home" },
      { key: "↑", label: "↑" },
      { key: "End" },
      { key: "PgUp" },
    ],
    [
      { key: "←", label: "←" },
      { key: "↓", label: "↓" },
      { key: "→", label: "→" },
      { key: "PgDn" },
    ],
    [{ key: "Ins" }, { key: "Del" }, { key: "PrtSc" }, { key: "Break" }],
    [{ key: "main", label: "Back to Main", size: "large" }],
  ];

  keyboardRows: string[][] = [];

  constructor() {
    this.keyboardRows = [
      ["Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P"],
      ["A", "S", "D", "F", "G", "H", "J", "K", "L"],
      ["Shift", "Z", "X", "C", "V", "B", "N", "M", "Backspace"],
      ["Caps Lock", "@", "Space", ".", "Enter"],
    ];
  }

  switchLayout(layout: string): void {
    this.currentLayout = layout;
  }

  handleKeyPress(key: string): void {
    if (key === "main") {
      this.currentLayout = "main";
      return;
    }

    const keyEvent: KeyboardEvent = {
      key: key,
      code: this.getCodeFromKey(key),
      keyCode: this.getKeyCodeFromKey(key),
    };

    console.log(`Key pressed: ${key}`);
    this.keyPress.emit(keyEvent);
  }

  private getKeyCodeFromKey(key: string): number {
    const keyCodes: { [key: string]: number } = {
      a: 65,
      b: 66,
      c: 67,
      d: 68,
      e: 69,
      f: 70,
      g: 71,
      h: 72,
      i: 73,
      j: 74,
      k: 75,
      l: 76,
      m: 77,
      n: 78,
      o: 79,
      p: 80,
      q: 81,
      r: 82,
      s: 83,
      t: 84,
      u: 85,
      v: 86,
      w: 87,
      x: 88,
      y: 89,
      z: 90,

      "0": 48,
      "1": 49,
      "2": 50,
      "3": 51,
      "4": 52,
      "5": 53,
      "6": 54,
      "7": 55,
      "8": 56,
      "9": 57,

      Space: 32,
      Enter: 13,
      Backspace: 8,
      Tab: 9,
      Shift: 16,
      Ctrl: 17,
      Alt: 18,
      Escape: 27,
      Esc: 27,
      CapsLock: 20,
      "Caps Lock": 20,

      F1: 112,
      F2: 113,
      F3: 114,
      F4: 115,
      F5: 116,
      F6: 117,
      F7: 118,
      F8: 119,
      F9: 120,
      F10: 121,
      F11: 122,
      F12: 123,

      Delete: 46,
      Del: 46,
      Insert: 45,
      Ins: 45,
      Home: 36,
      End: 35,
      PgUp: 33,
      PgDn: 34,
      PageUp: 33,
      PageDown: 34,
      ArrowLeft: 37,
      "←": 37,
      ArrowUp: 38,
      "↑": 38,
      ArrowRight: 39,
      "→": 39,
      ArrowDown: 40,
      "↓": 40,

      ";": 186,
      "=": 187,
      ",": 188,
      "-": 189,
      ".": 190,
      "/": 191,
      "`": 192,
      "[": 219,
      "\\": 220,
      "]": 221,
      "'": 222,

      PrtSc: 44,
      Print: 44,
      PrintScreen: 44,
      ScrLk: 145,
      ScrollLock: 145,
      Pause: 19,
      Break: 19,
      Menu: 93,
      ContextMenu: 93,
      "⌘": 91,
      Win: 91,
      Meta: 91,
      NumLk: 144,
      NumLock: 144,

      "~": 192,
      "!": 49,
      "@": 50,
      "#": 51,
      $: 52,
      "%": 53,
      "^": 54,
      "&": 55,
      "*": 56,
      "(": 57,
      ")": 48,
      _: 189,
      "+": 187,
      "{": 219,
      "}": 221,
      "|": 220,
      ":": 186,
      '"': 222,
      "<": 188,
      ">": 190,
      "?": 191,

      "≤": 901,
      "≥": 902,
      "≠": 903,
      "≈": 904,
      "÷": 905,
      "×": 906,
      "±": 907,
      "∞": 908,
      "€": 909,
      "£": 910,
      "¥": 911,
      "₹": 912,
      "©": 913,
      "®": 914,
      "™": 915,
      "°": 916,
      "¶": 917,
      "§": 918,
    };

    return keyCodes[key.toLowerCase()] || keyCodes[key] || 0;
  }

  private getCodeFromKey(key: string): string {
    const keyCodes: { [key: string]: string } = {
      a: "KeyA",
      b: "KeyB",
      c: "KeyC",
      d: "KeyD",
      e: "KeyE",
      f: "KeyF",
      g: "KeyG",
      h: "KeyH",
      i: "KeyI",
      j: "KeyJ",
      k: "KeyK",
      l: "KeyL",
      m: "KeyM",
      n: "KeyN",
      o: "KeyO",
      p: "KeyP",
      q: "KeyQ",
      r: "KeyR",
      s: "KeyS",
      t: "KeyT",
      u: "KeyU",
      v: "KeyV",
      w: "KeyW",
      x: "KeyX",
      y: "KeyY",
      z: "KeyZ",

      "0": "Digit0",
      "1": "Digit1",
      "2": "Digit2",
      "3": "Digit3",
      "4": "Digit4",
      "5": "Digit5",
      "6": "Digit6",
      "7": "Digit7",
      "8": "Digit8",
      "9": "Digit9",

      Space: "Space",
      Enter: "Enter",
      Backspace: "Backspace",
      Tab: "Tab",
      Shift: "ShiftLeft",
      Ctrl: "ControlLeft",
      Alt: "AltLeft",
      Escape: "Escape",
      Esc: "Escape",
      CapsLock: "CapsLock",
      "Caps Lock": "CapsLock",

      F1: "F1",
      F2: "F2",
      F3: "F3",
      F4: "F4",
      F5: "F5",
      F6: "F6",
      F7: "F7",
      F8: "F8",
      F9: "F9",
      F10: "F10",
      F11: "F11",
      F12: "F12",

      Delete: "Delete",
      Del: "Delete",
      Insert: "Insert",
      Ins: "Insert",
      Home: "Home",
      End: "End",
      PgUp: "PageUp",
      PgDn: "PageDown",
      PageUp: "PageUp",
      PageDown: "PageDown",
      ArrowLeft: "ArrowLeft",
      "←": "ArrowLeft",
      ArrowUp: "ArrowUp",
      "↑": "ArrowUp",
      ArrowRight: "ArrowRight",
      "→": "ArrowRight",
      ArrowDown: "ArrowDown",
      "↓": "ArrowDown",

      ";": "Semicolon",
      "=": "Equal",
      ",": "Comma",
      "-": "Minus",
      ".": "Period",
      "/": "Slash",
      "`": "Backquote",
      "[": "BracketLeft",
      "\\": "Backslash",
      "]": "BracketRight",
      "'": "Quote",

      PrtSc: "PrintScreen",
      Print: "PrintScreen",
      PrintScreen: "PrintScreen",
      ScrLk: "ScrollLock",
      ScrollLock: "ScrollLock",
      Pause: "Pause",
      Break: "Pause",
      Menu: "ContextMenu",
      ContextMenu: "ContextMenu",
      "⌘": "MetaLeft",
      Win: "MetaLeft",
      Meta: "MetaLeft",
      NumLk: "NumLock",
      NumLock: "NumLock",

      "~": "Backquote",
      "!": "Digit1",
      "@": "Digit2",
      "#": "Digit3",
      $: "Digit4",
      "%": "Digit5",
      "^": "Digit6",
      "&": "Digit7",
      "*": "Digit8",
      "(": "Digit9",
      ")": "Digit0",
      _: "Minus",
      "+": "Equal",
      "{": "BracketLeft",
      "}": "BracketRight",
      "|": "Backslash",
      ":": "Semicolon",
      '"': "Quote",
      "<": "Comma",
      ">": "Period",
      "?": "Slash",

      "≤": "LessThanEqual",
      "≥": "GreaterThanEqual",
      "≠": "NotEqual",
      "≈": "Approximately",
      "÷": "Divide",
      "×": "Multiply",
      "±": "PlusMinus",
      "∞": "Infinity",
      "€": "Euro",
      "£": "Pound",
      "¥": "Yen",
      "₹": "Rupee",
      "©": "Copyright",
      "®": "Registered",
      "™": "Trademark",
      "°": "Degree",
      "¶": "Paragraph",
      "§": "Section",
    };

    const lowerKey = key.toLowerCase();
    return keyCodes[lowerKey] || keyCodes[key] || key;
  }
}
